define(["ember","application","api","translate","constants"],function(a,b,c,d,e){b.ValidationHelpersService=a.Service.extend({checkDatatype:function(a,b){return a===e.vssType.IntField?/^\d+$/.test(b):!(a!==e.vssType.Text)||!(a!==e.vssType.MemoText)},getName:function(a){return c.ember.getPerson(a).then(function(a){return a.LastName+" "+a.FirstName})},validateSubscriptionDetail:function(b,f){if(!0===f.get("checked"))return a.RSVP.Promise.resolve();var g=this,h=f.get("personId"),i=f.get("eventId"),j=f.get("subscriptionDetailId"),k=f.get("newValue");return new a.RSVP.Promise(function(a){return void 0===b.events[i]?void c.ember.getEvent(i).then(function(c){b.events[i]=c,a(c)}):void a(b.events[i])}).then(function(a){if(null==a)throw f.set("error",d.getString("eventDoesNotExist")),Error("event does not exist");else if(a.hasError)throw f.set("error",d.getString("eventDoesNotExist")),Error("event does not exist");return f.set("event",a.Number),eventPersonId=i+"_"+h,void 0===b.subscriptionDetails[eventPersonId]?c.ember.getSubscriptionByIdEventPerson(i,h).then(function(a){if(0===a.length)throw f.set("error",d.getString("noSubscription")),Error("student is not subscribed to the event");else b.subscriptionDetails[eventPersonId]=a,g.getName(h).then(function(a){f.set("name",a)});return a}):(null==b.subscriptionDetails[eventPersonId].name&&g.getName(h).then(function(a){f.set("name",a)}),b.subscriptionDetails[eventPersonId])}).then(function(a){var d=a[0].IdSubscription;return void 0===b.subscriptionDetails[d]?c.ember.SubscriptionDetailsByIdSubscription(d).then(function(a){return b.subscriptionDetails[d]=a,a}):b.subscriptionDetails[d]}).then(function(a){var b={};a.forEach(function(a){void 0===b[a.IdAnmeldeVSS]&&(b[a.IdAnmeldeVSS]={name:a.VssBezeichnung,students:{}}),b[a.IdAnmeldeVSS].students[a.IdPerson]={value:a.Value,type:a.VssTypEx,raw:a}});var c=b[j];if(void 0===c)throw f.set("error",d.getString("subscriptionDetailDoesNotExist")),Error("subscriptionDetail does not exist");var i=c.name;f.set("subscriptionDetail",i);var l=c.students[h],m=l.raw;if("TX"!==m.VssStyle||m.VssTypEx!==e.vssType.IntField&&m.VssTypEx!==e.vssType.Text&&m.VssTypEx!==e.vssType.MemoText)throw f.set("error",d.getString("notEditable")),Error("subscriptionDetail not editable");if(f.set("oldValue",l.value),f.set("raw",l.raw),!g.checkDatatype(l.type,k))throw f.set("error",d.getString("invalidSubscriptionDetailValue")),Error("the new value is invalid")}).catch(a.K).then(function(){f.set("checked",!0)})}})});