{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app-standalone.component.ts","./src/app/app-standalone.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/global-error-handler.ts","./src/app/home.component.ts","./src/app/rest-auth-interceptor.ts","./src/app/rest-error-interceptor.ts","./src/app/settings.ts","./src/app/shared/components/avatar/avatar.component.ts","./src/app/shared/components/avatar/avatar.component.html","./src/app/shared/components/date-select/date-select.component.ts","./src/app/shared/components/date-select/date-select.component.html","./src/app/shared/components/multiselect/multiselect.component.ts","./src/app/shared/components/multiselect/multiselect.component.html","./src/app/shared/components/resettable-input/resettable-input.component.ts","./src/app/shared/components/resettable-input/resettable-input.component.html","./src/app/shared/components/select/select.component.ts","./src/app/shared/components/select/select.component.html","./src/app/shared/components/spinner/spinner.component.ts","./src/app/shared/components/spinner/spinner.component.html","./src/app/shared/components/typeahead/typeahead.component.ts","./src/app/shared/components/typeahead/typeahead.component.html","./src/app/shared/directives/let.directive.ts","./src/app/shared/models/common-types.ts","./src/app/shared/models/teacher-resource.model.ts","./src/app/shared/models/teacher-substitution.model.ts","./src/app/shared/pipes/add-space.pipe.ts","./src/app/shared/pipes/days-difference.pipe.ts","./src/app/shared/pipes/person-email.pipe.ts","./src/app/shared/pipes/safe.pipe.ts","./src/app/shared/pipes/xss.pipe.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/date-parser-formatter.ts","./src/app/shared/services/i18n.service.ts","./src/app/shared/services/loading-service.ts","./src/app/shared/services/rest.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/services/teacher-resource.service.ts","./src/app/shared/services/teacher-substitution.service.ts","./src/app/shared/services/typeahead-rest.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/tokens/dom-apis.ts","./src/app/shared/utils/date.ts","./src/app/shared/utils/decode.ts","./src/app/shared/utils/filter.ts","./src/app/shared/utils/observable.ts","./src/app/shared/utils/types.ts","./src/app/unauthenticated.component.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { AuthGuard } from './auth.guard';\nimport { UnauthenticatedComponent } from './unauthenticated.component';\n\nconst routes: Routes = [\n  {\n    path: 'substitutions',\n    canActivate: [AuthGuard],\n    loadChildren: () =>\n      import('./substitutions/substitutions.module').then(\n        (m) => m.SubstitutionsModule\n      ),\n  }, \n  { path: 'unauthenticated', component: UnauthenticatedComponent },\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full',\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, ChangeDetectionStrategy, Inject, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError, map, onErrorResumeNext, share, switchMap, tap } from 'rxjs/operators';\r\nimport { BehaviorSubject, combineLatest, EMPTY, Observable } from 'rxjs';\r\n\r\nimport { SETTINGS, Settings } from './settings';\r\nimport { I18nService } from './shared/services/i18n.service';\r\nimport { decode } from './shared/utils/decode';\r\nimport { NAVIGATOR } from './shared/tokens/dom-apis';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, SUBSTITUTE_ADMINISTRATOR_ROLE } from './shared/services/auth.service';\r\nimport { TeacherResourceService } from './shared/services/teacher-resource.service';\r\nimport { TeacherSubstitutionService } from './shared/services/teacher-substitution.service';\r\n\r\n@Component({\r\n  selector: 'app-standalone',\r\n  templateUrl: './app-standalone.component.html',\r\n  styleUrls: ['./app-standalone.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n})\r\nexport class AppStandaloneComponent {\r\n\r\n  isLoggedIn$:Observable<boolean>;\r\n  isAdmin$:Observable<boolean>;\r\n  userName$:Observable<Option<string>>;\r\n  isSubstitutionActive$:Observable<boolean>;\r\n  substitutionName$:Observable<Option<string>>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    i18n: I18nService,\r\n    public auth: AuthService,\r\n    public location: Location,\r\n    private teacherResourceService: TeacherResourceService,\r\n    private teacherSubstitutionService: TeacherSubstitutionService,\r\n  ) {\r\n    this.isAdmin$ = new BehaviorSubject<boolean>(auth.hasRole(SUBSTITUTE_ADMINISTRATOR_ROLE));\r\n\r\n    this.isLoggedIn$ = auth.personId$.pipe(\r\n      map(v => !!v)\r\n    );\r\n    this.userName$ = auth.holderId$.pipe(\r\n      map(v => this.auth.personName)\r\n    );\r\n    this.isSubstitutionActive$ = auth.substitutionId$.pipe(\r\n      map(v => !!v)\r\n    );\r\n    this.substitutionName$ = auth.holderId$.pipe(\r\n      tap(v => {\r\n        console.log('load', v);\r\n      }),\r\n      switchMap(v => this.teacherResourceService.getTeacherName(v)),\r\n      share(),\r\n      tap(v => {\r\n        console.log('name', v);\r\n      }),\r\n      onErrorResumeNext()\r\n    );\r\n  }\r\n\r\n  stopSubstitution():void {\r\n    if (this.auth.substitutionId != null) {\r\n      this.teacherSubstitutionService.stop(this.auth.substitutionId).subscribe(v => null);\r\n    }\r\n  }\r\n\r\n  login():void {\r\n    this.auth.login();\r\n  }\r\n\r\n  logout():void {\r\n    this.auth.logout();\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-primary mb-3\">\n    <div class=\"container-fluid\">\n        <div *ngIf=\"isLoggedIn$ | async\" class=\"dropdown main-menu\">\n            <button class=\"btn btn-primary\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\">\n                <i class=\"material-icons\">menu</i>\n            </button>\n            <div class=\"dropdown-menu\">\n            <a class=\"dropdown-item\" routerLinkActive=\"active\" [routerLink]=\"['substitutions', 'execute']\">{{'navigation.item-execute' | translate}}</a>\n            <a class=\"dropdown-item\" routerLinkActive=\"active\" [routerLink]=\"['substitutions', 'assign']\">{{'navigation.item-assign' | translate}}</a>\n            <a class=\"dropdown-item\" routerLinkActive=\"active\" [routerLink]=\"['substitutions', 'admin']\" *ngIf=\"isAdmin$ | async\">{{'navigation.item-admin' | translate}}</a>\n            </div>\n        </div>\n        <div *ngIf=\"!(isLoggedIn$ | async)\">\n        </div>\n\n        <a class=\"navbar-brand text-light\" href=\"#\">{{'navigation.title' | translate}}</a>\n\n        <div *ngIf=\"isLoggedIn$ | async\" class=\"dropdown\"> \n            <button class=\"btn btn-primary text-nowrap d-flex flex-row\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\">\n                <i class=\"material-icons\">person</i>\n                <span class=\"ms-2 d-none d-md-block\">{{userName$ | async}}</span>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-end\"> \n                <div >\n                    <div class=\"m-2\" *ngIf=\"isSubstitutionActive$ | async\">\n                        <div class=\"text-muted\">{{'navigation.user.signed-in-as' | translate}}</div>\n                        <div class=\"text-nowrap\">{{substitutionName$ | async}}</div>\n                        <div class=\"text-end\">\n                            <button class=\"btn btn-secondary\" (click)=\"stopSubstitution()\">{{'navigation.user.stop-button-label' | translate}}</button>\n                        </div>\n                        <br />\n                        <div class=\"text-muted\">{{'navigation.user.substituted-by' | translate}}</div>\n                        <span class=\"text-nowrap\">{{userName$ | async}}</span>\n                        <div class=\"text-end mt-2\">\n                            <button class=\"btn btn-secondary\" (click)=\"logout()\">{{'navigation.user.logout-button-label' | translate}}</button>\n                        </div>\n                    </div>\n                    <div class=\"m-2\" *ngIf=\"(isSubstitutionActive$ | async) == false\">\n                        <div class=\"text-muted\">{{'navigation.user.signed-in-as' | translate}}</div>\n                        <div class=\"text-nowrap\">{{userName$ | async}}</div>\n                        <div class=\"text-end mt-2\">\n                            <button class=\"btn btn-primary\" (click)=\"logout()\">Logout</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"!(isLoggedIn$ | async)\" class=\"dropdown\" >\n            <button class=\"btn btn-primary\" type=\"button\" (click)=\"login()\">\n                {{'navigation.user.login-button-label' | translate}}\n            </button>\n        </div>\n    </div>\n</nav>\n<app></app>\n","import { Component, ChangeDetectionStrategy, Inject, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { EMPTY } from 'rxjs';\r\nimport { SETTINGS, Settings } from './settings';\r\nimport { I18nService } from './shared/services/i18n.service';\r\nimport { decode } from './shared/utils/decode';\r\nimport { NAVIGATOR } from './shared/tokens/dom-apis';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: '<router-outlet></router-outlet>',\r\n  styleUrls: ['./app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(\r\n    private router: Router,\r\n    private auth: AuthService,\r\n    private location: Location,\r\n    i18n: I18nService,\r\n    private toastrService: ToastrService,\r\n    @Inject(SETTINGS) private settings: Settings,\r\n    @Inject(NAVIGATOR) private navigator: Navigator\r\n  ) {\r\n    this.router.initialNavigation();\r\n    i18n.initialize();\r\n    this.checkSettings();\r\n  }\r\n\r\n  private checkSettings(): void {\r\n    decode(Settings)(this.settings)\r\n      .pipe(\r\n        catchError((error) => {\r\n          console.error(String(error));\r\n          this.toastrService.error(\r\n            'Please check the contents of the settings.js file (see Console output for more details).',\r\n            'Invalid Settings'\r\n          );\r\n          return EMPTY;\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let params = new URLSearchParams(window.location.search);\r\n\r\n    let accessToken = params.get('access_token');\r\n    let moduleRedirectUrl = params.get('moduleRedirectUrl');\r\n    let hash = (window.location.hash ?? '').replace(/^\\#\\/?/, '');\r\n\r\n    if (accessToken) {\r\n      console.log('set token');\r\n      this.auth.setToken(accessToken);\r\n    }\r\n\r\n    if (moduleRedirectUrl) {\r\n      window.location.hash = `#${moduleRedirectUrl}`;\r\n      //this.router.navigate([moduleRedirectUrl]);\r\n\r\n    } else if (!hash) {\r\n      console.log('navigate to assign');\r\n      this.router.navigate(['substitutions', 'assign']);\r\n    }\r\n\r\n    if (accessToken || moduleRedirectUrl) {\r\n      params.delete('access_token');\r\n      params.delete('moduleRedirectUrl');\r\n\r\n      window.location.search = params.toString();\r\n    }\r\n  }\r\n}\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport localeDECH from '@angular/common/locales/de-CH';\r\nimport localeFRCH from '@angular/common/locales/fr-CH';\r\nimport {\r\n  ApplicationRef,\r\n  DoBootstrap,\r\n  ErrorHandler,\r\n  Injector,\r\n  LOCALE_ID,\r\n  NgModule,\r\n} from '@angular/core';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GlobalErrorHandler } from './global-error-handler';\r\nimport { HomeComponent } from './home.component';\r\nimport { Settings, SETTINGS } from './settings';\r\nimport { I18nService } from './shared/services/i18n.service';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { UnauthenticatedComponent } from './unauthenticated.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppStandaloneComponent } from './app-standalone.component';\r\n\r\n// AoT requires an exported function for factories\r\nexport function HttpLoaderFactory(\r\n  http: HttpClient,\r\n  settings: Settings\r\n): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(\r\n    http,\r\n    `${settings.scriptsAndAssetsPath}/assets/locales/`,\r\n    '.json'\r\n  );\r\n}\r\n\r\nregisterLocaleData(localeDECH);\r\nregisterLocaleData(localeFRCH);\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        AppStandaloneComponent,\r\n        HomeComponent,\r\n        UnauthenticatedComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        RouterModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient, SETTINGS],\r\n            },\r\n        }),\r\n        ToastrModule.forRoot({\r\n            positionClass: 'toast-bottom-right',\r\n            preventDuplicates: true,\r\n        }),\r\n        SharedModule,\r\n        NgSelectModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        NgbModule\r\n    ],\r\n    providers: [\r\n        { provide: ErrorHandler, useClass: GlobalErrorHandler },\r\n        {\r\n            provide: LOCALE_ID,\r\n            useFactory: (i18nService: I18nService) => i18nService.detectLanguage(),\r\n            deps: [I18nService],\r\n        },\r\n    ],\r\n    bootstrap: []\r\n})\r\nexport class AppModule implements DoBootstrap {\r\n  constructor(private injector: Injector) {\r\n    const appElement = createCustomElement(AppComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('erz-app', appElement);\r\n\r\n    const appStandaloneElement = createCustomElement(AppStandaloneComponent, {\r\n      injector: this.injector,\r\n    });\r\n    customElements.define('erz-app-standalone', appStandaloneElement);\r\n\r\n    console.log('init module');\r\n  }\r\n\r\n  ngDoBootstrap(appRef: ApplicationRef): void {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './shared/services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private auth: AuthService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    \r\n    if (!this.auth.isAuthenticated) {\r\n      this.router.navigate(['/unauthenticated']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable, ErrorHandler, Injector, NgZone } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n  constructor(\r\n    private ngZone: NgZone,\r\n    private injector: Injector,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  handleError(error: any): void {\r\n    console.error(String(error));\r\n\r\n    if (!(error instanceof HttpErrorResponse)) {\r\n      this.notifyError();\r\n    }\r\n  }\r\n\r\n  private notifyError(): void {\r\n    // Inject and use ToastrService within ngZone, see:\r\n    // https://github.com/scttcper/ngx-toastr/issues/179\r\n    this.ngZone.run(() => {\r\n      this.toastr.error(\r\n        this.translate.instant('global.app-errors.exception-message'),\r\n        this.translate.instant('global.app-errors.exception-title')\r\n      );\r\n    });\r\n  }\r\n\r\n  private get toastr(): ToastrService {\r\n    return this.injector.get(ToastrService);\r\n  }\r\n}\r\n","import { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { AuthService } from './shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'erz-home',\r\n  template: `\r\n    <ul class=\"mt-3\">\r\n      <li *ngFor=\"let section of sections\">\r\n        <h2>\r\n          <a [routerLink]=\"'/' + section\">\r\n            {{ section + '.title' | translate }}\r\n          </a>\r\n        </h2>\r\n      </li>\r\n    </ul>\r\n  `,\r\n  styleUrls: ['./home.component.scss'],\r\n  //changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HomeComponent {\r\n  sections: ReadonlyArray<string> = [\r\n    'substitutions/execute',\r\n    'substitutions/assign',\r\n    //'substitutions',\r\n    //'substitutions/current'\r\n  ];\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    public authService: AuthService,\r\n    public router: Router,\r\n    public location: Location,\r\n    public changeDetector: ChangeDetectorRef\r\n  ) { }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './shared/services/auth.service';\r\nimport { SETTINGS, Settings } from './settings';\r\n\r\n@Injectable()\r\nexport class RestAuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private auth: AuthService,\r\n    @Inject(SETTINGS) private settings: Settings\r\n  ) {}\r\n\r\n  /**\r\n   * Adds the CLX-Authorization HTTP header to API requests.\r\n   */\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (req.url.startsWith(this.settings.apiUrl) && this.auth.accessToken) {\r\n      const headers = req.headers.set(\r\n        'CLX-Authorization',\r\n        `token_type=urn:ietf:params:oauth:token-type:jwt-bearer, access_token=${this.auth.accessToken}`\r\n      );\r\n      return next.handle(req.clone({ headers }));\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpErrorResponse,\r\n  HttpParams,\r\n} from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, EMPTY, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { HTTP_STATUS } from './shared/services/rest.service';\r\n\r\ninterface RestConfig {\r\n  disableErrorHandling?: boolean;\r\n  disableErrorHandlingForStatus?: ReadonlyArray<number>;\r\n}\r\n\r\nexport function withConfig(\r\n  config: RestConfig,\r\n  params:\r\n    | HttpParams\r\n    | {\r\n        [param: string]: string | string[];\r\n      } = {}\r\n): HttpParams {\r\n  let httpParams: HttpParams;\r\n  if (params instanceof HttpParams) {\r\n    httpParams = params;\r\n  } else {\r\n    httpParams = new HttpParams({ fromObject: params });\r\n  }\r\n  return httpParams.set('restConfig', JSON.stringify(config));\r\n}\r\n\r\nfunction extractConfig(\r\n  params: HttpParams\r\n): { config: RestConfig; params: HttpParams } {\r\n  return {\r\n    config: JSON.parse(params.get('restConfig') || '{}'),\r\n    params: params.delete('restConfig'),\r\n  };\r\n}\r\n\r\n@Injectable()\r\nexport class RestErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  /**\r\n   * Displays an error notification for all error status codes.\r\n   *\r\n   * It is possible to disable error handling for all status codes by\r\n   * setting the config option `skipErrorHandling` to `true`:\r\n   *\r\n   *   const params = withConfig(\r\n   *     { disableErrorHandling: true },\r\n   *     { myParam: 'foobar' }\r\n   *   );\r\n   *   this.http.get('/', { params }).pipe(catchError( handle request errors here... ))\r\n   *\r\n   * To disable error handling of only certain error codes, the option\r\n   * `skipErrorHandlingForStatus` can be set to an array of status\r\n   * codes like this:\r\n   *\r\n   *   const params = withConfig(\r\n   *     { disableErrorHandlingForStatus: [403, 404] },\r\n   *     { myParam: 'foobar' }\r\n   *   );\r\n   *   this.http.get('/', { params }).pipe(catchError( handle 403/404 here... ))\r\n   */\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // TODO: there might be better ways of passing options to the\r\n    // interceptor in the future, see:\r\n    // https://github.com/angular/angular/issues/18155\r\n    const { config, params } = extractConfig(req.params);\r\n    return next\r\n      .handle(req.clone({ params }))\r\n      .pipe(catchError(this.getErrorHandler(config)));\r\n  }\r\n\r\n  private getErrorHandler(\r\n    config: RestConfig\r\n  ): (\r\n    error: any,\r\n    caught: Observable<HttpEvent<any>>\r\n  ) => Observable<HttpEvent<any>> {\r\n    // tslint:disable-next-line\r\n    return (\r\n      error: any,\r\n      caught: Observable<HttpEvent<any>>\r\n    ): Observable<HttpEvent<any>> => {\r\n      if (\r\n        error instanceof HttpErrorResponse &&\r\n        !config.disableErrorHandling &&\r\n        (!config.disableErrorHandlingForStatus ||\r\n          !config.disableErrorHandlingForStatus.includes(error.status))\r\n      ) {\r\n        switch (error.status) {\r\n          case HTTP_STATUS.UNAUTHORIZED:\r\n            this.notifyError('noaccess');\r\n            this.router.navigate(['/unauthenticated']);\r\n            throw error.error;\r\n            //return EMPTY;\r\n          case HTTP_STATUS.FORBIDDEN:\r\n            this.notifyError('noaccess');\r\n            throw error.error;\r\n            //return EMPTY;\r\n          case HTTP_STATUS.NOT_FOUND:\r\n            this.notifyError('notfound');\r\n            throw error.error;\r\n            //return EMPTY;\r\n          case HTTP_STATUS.UNKNOWN:\r\n          case HTTP_STATUS.SERVICE_UNAVAILABLE:\r\n          case HTTP_STATUS.GATEWAY_TIMEOUT:\r\n            this.notifyError('unavailable');\r\n            throw error.error;\r\n            //return EMPTY;\r\n          case HTTP_STATUS.CONFLICT: // Validation error\r\n            this.notifyError('conflict');\r\n            throw error.error;\r\n            //return EMPTY;\r\n          default:\r\n            this.notifyError('server');\r\n            throw error.error;\r\n            //return EMPTY;\r\n        }\r\n      }\r\n\r\n      return throwError(error);\r\n    };\r\n  }\r\n\r\n  private notifyError(messageKey: string): void {\r\n    this.toastr.error(\r\n      this.translate.instant(`global.rest-errors.${messageKey}-message`),\r\n      this.translate.instant(`global.rest-errors.${messageKey}-title`)\r\n    );\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport * as t from 'io-ts';\r\n\r\nimport { Option } from './shared/models/common-types';\r\n\r\nconst Settings = t.type({\r\n  apiUrl: t.string,\r\n  oAuthUrl: t.string,\r\n  oAuthRedirectUrl: t.union([t.string, t.undefined]),\r\n  clientId: t.union([t.string, t.undefined]),\r\n  instanceId: t.string,\r\n  appScope: t.string,\r\n  scriptsAndAssetsPath: t.string,\r\n\r\n});\r\n\r\ntype Settings = t.TypeOf<typeof Settings>;\r\nexport { Settings };\r\n\r\ndeclare global {\r\n  interface Window {\r\n    stellvertretung: {\r\n      settings: Settings;\r\n    };\r\n  }\r\n}\r\n\r\nexport const SETTINGS = new InjectionToken<Settings>('Application Settings', {\r\n  providedIn: 'root',\r\n  factory: () => window.stellvertretung.settings,\r\n});\r\n","import {\r\n  Component,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  OnChanges,\r\n} from '@angular/core';\r\nimport { Params } from '@angular/router';\r\n\r\nimport { SETTINGS, Settings } from 'src/app/settings';\r\nimport { StorageService } from '../../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'erz-avatar',\r\n  templateUrl: './avatar.component.html',\r\n  styleUrls: ['./avatar.component.scss'],\r\n})\r\nexport class AvatarComponent implements OnInit, OnChanges {\r\n  @Input() studentId: number;\r\n  @Input() link: string[];\r\n  @Input() linkParams?: Params;\r\n\r\n  avatarStyles: Dict<string> = {};\r\n\r\n  constructor(\r\n    @Inject(SETTINGS) private settings: Settings,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.studentId) {\r\n      this.avatarStyles = this.buildAvatarStyles(this.studentId);\r\n    }\r\n  }\r\n\r\n  private buildAvatarStyles(studentId: number): { [key: string]: string } {\r\n    return {\r\n      'background-image': [\r\n        this.buildAvatarUrl(studentId),\r\n        this.fallbackAvatarUrl,\r\n      ]\r\n        .map((url) => `url(${url})`)\r\n        .join(', '),\r\n    };\r\n  }\r\n\r\n  private buildAvatarUrl(studentId: number): string {\r\n    const accessToken = this.storageService.getAccessToken() || '';\r\n    return `${this.settings.apiUrl}/Files\\/personPictures/${studentId}?token=${accessToken}`;\r\n  }\r\n\r\n  private get fallbackAvatarUrl(): string {\r\n    return `${this.settings.scriptsAndAssetsPath}/assets/images/avatar-placeholder.png`;\r\n  }\r\n}\r\n","<a\r\n  class=\"avatar\"\r\n  [class.disabled]=\"!link\"\r\n  [routerLink]=\"link\"\r\n  [queryParams]=\"linkParams\"\r\n  [ngStyle]=\"avatarStyles\"\r\n></a>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgbDateAdapter, NgbDateNativeAdapter, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\r\nimport { uniqueId } from 'lodash-es';\r\nimport { DateParserFormatter } from '../../services/date-parser-formatter';\r\n\r\n@Component({\r\n  selector: 'erz-date-select',\r\n  templateUrl: './date-select.component.html',\r\n  styleUrls: ['./date-select.component.scss'],\r\n  providers: [\r\n    { provide: NgbDateAdapter, useClass: NgbDateNativeAdapter },\r\n    { provide: NgbDateParserFormatter, useClass: DateParserFormatter },\r\n  ],\r\n})\r\nexport class DateSelectComponent implements OnInit {\r\n  ngbDate:Option<any>; \r\n  @Input('error') error:boolean = false;\r\n  //@Input() \r\n  //get value():Option<Date> { return this.ngbDate; }\r\n  //set value(val:Option<Date>) { this.ngbDate = val != null ? {year: val.getFullYear(), month: val.getMonth() + 1, day: val.getDate()} : null; }\r\n  @Input() value: Option<Date> = null;\r\n  @Input() placeholder = 'shared.date-select.default-placeholder';\r\n  @Input() minDate: Option<{ year: number; month: number; day: number }> = null;\r\n  @Output() valueChange = new EventEmitter<Option<Date>>();\r\n\r\n  componentId = uniqueId('erz-date-select-');\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  change(ngbDate:Option<any>):void{\r\n    this.valueChange.emit(ngbDate);\r\n    return;\r\n    \r\n    if (ngbDate != null) {\r\n      //this.valueChange.emit(new Date(Date.UTC(ngbDate.year, ngbDate.month - 1, ngbDate.day)));\r\n      this.valueChange.emit(ngbDate);\r\n    } else {\r\n      this.valueChange.emit(null);\r\n    }\r\n  }\r\n}\r\n","<div class=\"input-group\">\r\n  <span class=\"input-group-text\" [id]=\"componentId\">\r\n    <i class=\"material-icons\">calendar_today</i>\r\n  </span>\r\n  <input\r\n    type=\"text\"\r\n    class=\"form-control\"\r\n    [attr.placeholder]=\"placeholder | translate\"\r\n    [attr.aria-label]=\"placeholder | translate\"\r\n    [attr.aria-describedby]=\"componentId\"\r\n    ngbDatepicker\r\n    #dp=\"ngbDatepicker\"\r\n    (click)=\"dp.toggle()\"\r\n    [minDate]=\"minDate\"\r\n    [ngModel]=\"value\"\r\n    (ngModelChange)=\"change($event)\"\r\n    [class.is-invalid]=\"error\"\r\n  />\r\n</div>\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { DropDownGroupedItem } from '../../models/drop-down-grouped-item.model';\r\n\r\n@Component({\r\n  selector: 'erz-multiselect',\r\n  templateUrl: './multiselect.component.html',\r\n  styleUrls: ['./multiselect.component.scss'],\r\n})\r\nexport class MultiselectComponent {\r\n  @Input() options: ReadonlyArray<DropDownGroupedItem> = [];\r\n  @Input() values: Option<number[]> = [];\r\n  @Output() valuesChange = new EventEmitter<Option<number[]>>();\r\n\r\n  constructor() {}\r\n\r\n  itemsChanged(): void {\r\n    this.valuesChange.emit(this.values);\r\n  }\r\n}\r\n","<ng-select\r\n  class=\"multiselect\"\r\n  [items]=\"options\"\r\n  [multiple]=\"true\"\r\n  groupBy=\"Group\"\r\n  [selectableGroup]=\"true\"\r\n  [selectableGroupAsModel]=\"false\"\r\n  [closeOnSelect]=\"false\"\r\n  [(ngModel)]=\"values\"\r\n  placeholder=\"{{ 'shared.select.empty-option' | translate }}\"\r\n  bindValue=\"Key\"\r\n  bindLabel=\"Value\"\r\n  (click)=\"itemsChanged()\"\r\n  (clear)=\"itemsChanged()\"\r\n  dropdownPosition=\"bottom\"\r\n  [clearable]=\"true\"\r\n>\r\n  <!-- selected items -->\r\n  <ng-template ng-multi-label-tmp let-items=\"items\" let-clear=\"clear\">\r\n    <div class=\"ng-value\" *ngFor=\"let item of items\">\r\n      {{ item.Value }}\r\n      <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\"\r\n        >×</span\r\n      >\r\n    </div>\r\n  </ng-template>\r\n\r\n  <!-- groups -->\r\n  <ng-template\r\n    ng-optgroup-tmp\r\n    let-item=\"item\"\r\n    let-item$=\"item$\"\r\n    let-index=\"index\"\r\n  >\r\n    <input id=\"item-{{ index }}\" type=\"checkbox\" [ngModel]=\"item$.selected\" />\r\n    {{ item.Group }}\r\n  </ng-template>\r\n\r\n  <!-- items -->\r\n  <ng-template\r\n    ng-option-tmp\r\n    let-item=\"item\"\r\n    let-item$=\"item$\"\r\n    let-index=\"index\"\r\n  >\r\n    <input id=\"item-{{ index }}\" type=\"checkbox\" [ngModel]=\"item$.selected\" />\r\n    {{ item.Value }}\r\n  </ng-template>\r\n</ng-select>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'erz-resettable-input',\r\n  templateUrl: './resettable-input.component.html',\r\n  styleUrls: ['./resettable-input.component.scss'],\r\n})\r\nexport class ResettableInputComponent implements OnInit {\r\n  @Input() value = '';\r\n  @Input() disabled = false;\r\n  @Input() placeholder: string;\r\n  @Input() label: string;\r\n\r\n  @Output() valueChange = new EventEmitter<string>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"input-group\">\r\n  <div class=\"input-group-prepend\">\r\n    <span class=\"input-group-text\" id=\"resettable-input\"\r\n      ><i class=\"material-icons\">search</i></span\r\n    >\r\n  </div>\r\n  <input\r\n    type=\"text\"\r\n    class=\"form-control\"\r\n    [value]=\"value\"\r\n    [disabled]=\"disabled\"\r\n    [attr.placeholder]=\"placeholder\"\r\n    [attr.aria-label]=\"label\"\r\n    aria-describedby=\"resettable-input\"\r\n    (keyup)=\"valueChange.emit($event.target.value)\"\r\n  />\r\n  <button\r\n    *ngIf=\"value\"\r\n    class=\"btn btn-link text-decoration-none\"\r\n    type=\"button\"\r\n    (click)=\"valueChange.emit('')\"\r\n  >\r\n    <i class=\"material-icons\">clear</i>\r\n  </button>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\n\r\nimport { DropDownItem } from '../../models/drop-down-item.model';\r\nimport { BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'erz-select',\r\n  templateUrl: './select.component.html',\r\n  styleUrls: ['./select.component.scss'],\r\n})\r\nexport class SelectComponent implements OnInit, OnChanges {\r\n  @Input() options: ReadonlyArray<DropDownItem> = [];\r\n  @Input() allowEmpty = true;\r\n  @Input() value: Option<number> = null;\r\n  @Output() valueChange = new EventEmitter<Option<number>>();\r\n\r\n  options$ = new BehaviorSubject<ReadonlyArray<DropDownItem>>([]);\r\n  rawValue$ = new BehaviorSubject<Option<number>>(null);\r\n\r\n  value$ = combineLatest([this.rawValue$, this.options$]).pipe(\r\n    map(\r\n      ([rawValue, options]) =>\r\n        (options && options.find((o) => o.Key === rawValue)) || null\r\n    )\r\n  );\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.value) {\r\n      this.rawValue$.next(changes.value.currentValue);\r\n    }\r\n    if (changes.options) {\r\n      this.options$.next(changes.options.currentValue);\r\n    }\r\n  }\r\n}\r\n","<select\r\n  class=\"form-control\"\r\n  [ngModel]=\"value$ | async\"\r\n  (ngModelChange)=\"valueChange.emit($event && $event.Key)\"\r\n>\r\n  <option *ngIf=\"allowEmpty\" [ngValue]=\"null\">\r\n    {{ 'shared.select.empty-option' | translate }}\r\n  </option>\r\n  <option *ngFor=\"let option of options\" [ngValue]=\"option\">\r\n    {{ option.Value }}\r\n  </option>\r\n  >\r\n</select>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'erz-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss'],\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"spinner-container\">\r\n  <div class=\"spinner-border\" role=\"status\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  switchMap,\r\n  map,\r\n  filter,\r\n  finalize,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { uniqueId } from 'lodash-es';\r\n\r\nimport { longerOrEqual } from '../../utils/filter';\r\nimport {\r\n  HttpParams,\r\n  TypeaheadService,\r\n} from '../../services/typeahead-rest.service';\r\nimport { DropDownItem } from '../../models/drop-down-item.model';\r\n\r\nconst FETCH_DEBOUNCE_TIME = 300;\r\nconst MINIMAL_TERM_LENGTH = 3;\r\n\r\n@Component({\r\n  selector: 'erz-typeahead',\r\n  templateUrl: './typeahead.component.html',\r\n  styleUrls: ['./typeahead.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TypeaheadComponent implements OnInit, OnChanges {\r\n  selectedItem$ = new BehaviorSubject<Option<DropDownItem>>(null);\r\n\r\n  @Input('error') error:boolean = false;\r\n  @Input() typeaheadService: TypeaheadService;\r\n  @Input() placeholder = 'shared.typeahead.default-placeholder';\r\n  @Input() value: Option<number>;\r\n  @Input() additionalHttpParams: HttpParams;\r\n\r\n  @Output()\r\n  valueChange = this.selectedItem$.pipe(\r\n    map((item) => (item ? item.Key : null)),\r\n    distinctUntilChanged()\r\n  );\r\n\r\n  componentId = uniqueId('erz-typeahead-');\r\n  loading$ = new BehaviorSubject(false);\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.value &&\r\n      changes.value.currentValue &&\r\n      changes.value.currentValue !== this.selectedItemId\r\n    ) {\r\n      this.fetchItem(changes.value.currentValue).subscribe((item) => {\r\n        this.modelChange(item);\r\n      });\r\n    }\r\n  }\r\n\r\n  search = (term$: Observable<string>): Observable<ReadonlyArray<DropDownItem>> => {\r\n    return term$.pipe(\r\n      processTerm(MINIMAL_TERM_LENGTH, FETCH_DEBOUNCE_TIME),\r\n      switchMap(this.fetchItems.bind(this)),\r\n    );\r\n  };\r\n\r\n  format(item: DropDownItem): string {\r\n    return item.Value;\r\n  }\r\n\r\n  modelChange(value: unknown): void {\r\n    this.selectedItem$.next(\r\n      value instanceof Object ? (value as DropDownItem) : null\r\n    );\r\n  }\r\n\r\n  private get selectedItemId(): Option<number> {\r\n    return this.selectedItem$.value ? this.selectedItem$.value.Key : null;\r\n  }\r\n\r\n  private fetchItems(term: string): Observable<ReadonlyArray<DropDownItem>> {\r\n    this.loading$.next(true);\r\n    return this.typeaheadService\r\n      .getTypeaheadItems(term, this.additionalHttpParams)\r\n      .pipe(finalize(() => this.loading$.next(false)));\r\n  }\r\n\r\n  private fetchItem(id: number): Observable<DropDownItem> {\r\n    this.loading$.next(true);\r\n    return this.typeaheadService\r\n      .getTypeaheadItemById(id)\r\n      .pipe(finalize(() => this.loading$.next(false)));\r\n  }\r\n}\r\n\r\nfunction processTerm(\r\n  minimalTermLength: number,\r\n  fetchDebounceTime: number\r\n): (source$: Observable<string>) => Observable<string> {\r\n  return (source$) =>\r\n    source$.pipe(\r\n      debounceTime(fetchDebounceTime),\r\n      map(normalizeTerm),\r\n      distinctUntilChanged(),\r\n      filter(longerOrEqual(minimalTermLength)),\r\n    );\r\n}\r\n\r\nfunction normalizeTerm(term: string): string {\r\n  return term.trim().toLowerCase();\r\n}\r\n","<div class=\"input-group\">\r\n  <span class=\"input-group-text\" [id]=\"componentId\">\r\n    <i class=\"material-icons\">search</i>\r\n  </span>\r\n  <input\r\n    type=\"text\"\r\n    class=\"form-control\"\r\n    [attr.placeholder]=\"placeholder | translate\"\r\n    [attr.aria-label]=\"placeholder | translate\"\r\n    [attr.aria-describedby]=\"componentId\"\r\n    [ngbTypeahead]=\"search\"\r\n    [inputFormatter]=\"format\"\r\n    [resultFormatter]=\"format\"\r\n    [ngModel]=\"selectedItem$ | async\"\r\n    (ngModelChange)=\"modelChange($event)\"\r\n    [class.is-invalid]=\"error\"\r\n  />\r\n  <button\r\n    *ngIf=\"value\"\r\n    class=\"btn btn-link text-decoration-none\"\r\n    type=\"button\"\r\n    (click)=\"modelChange($event)\"\r\n  >\r\n    <i class=\"material-icons\">clear</i>\r\n  </button>\r\n</div>\r\n<div *ngIf=\"loading$ | async\" class=\"spinner-container\">\r\n  <div class=\"spinner-border spinner-border-sm\" role=\"status\">\r\n    <span class=\"visually-hidden\">Loading...</span>\r\n  </div>\r\n</div>\r\n","/**\r\n * This directive is part of the ngrx-utils collection, see:\r\n * https://github.com/ngrx-utils/ngrx-utils/blob/master/projects/store/src/directives/ngLet.ts\r\n *\r\n * Usage:\r\n *   <ng-container *erzLet=\"(user$ | async) as task\">\r\n *     {{ user.name }} {{ user.age }}\r\n *   </ng-container>\r\n *\r\n * Or with multiple observables:\r\n *   <ng-container *erzLet=\"{ user: user$ | async, role: role$ | async }\">\r\n *     {{ user.name }} {{ user.age }}: {{ role.name }}\r\n *   </ng-container>\r\n *\r\n * Checkout the following link for the full documentation:\r\n * https://github.com/ngrx-utils/ngrx-utils#nglet-directive\r\n *\r\n * License: MIT\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  Input,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  OnInit,\r\n} from '@angular/core';\r\n\r\nexport class LetContext {\r\n  $implicit: any = null;\r\n  erzLet: any = null;\r\n}\r\n\r\n@Directive({\r\n  selector: '[erzLet]',\r\n})\r\nexport class LetDirective implements OnInit {\r\n  private context = new LetContext();\r\n\r\n  @Input()\r\n  set erzLet(value: any) {\r\n    this.context.$implicit = this.context.erzLet = value;\r\n  }\r\n\r\n  constructor(\r\n    private vcr: ViewContainerRef,\r\n    private templateRef: TemplateRef<LetContext>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.vcr.createEmbeddedView(this.templateRef, this.context);\r\n  }\r\n}\r\n","import * as t from 'io-ts';\r\nimport { either } from 'fp-ts/es6/Either';\r\nimport {\r\n  parseISOLocalDateTime,\r\n  formatISOLocalDateTime,\r\n  parseISOLocalDate,\r\n  formatISOLocalDate,\r\n} from '../utils/date';\r\n\r\nexport function Option<T extends t.Any>(\r\n  optionalType: T\r\n): t.UnionC<[t.NullC, T]> {\r\n  return t.union([t.null, optionalType]);\r\n}\r\n\r\nexport function Maybe<T extends t.Any>(\r\n  maybeType: T\r\n): t.UnionC<[t.NullC, t.UndefinedC, T]> {\r\n  return t.union([t.null, t.undefined, maybeType]);\r\n}\r\n\r\nconst Reference = t.type({ Id: t.number, HRef: Option(t.string) });\r\ntype Reference = t.TypeOf<typeof Reference>;\r\nexport { Reference };\r\n\r\nconst OptionalReference = t.type({\r\n  Id: Option(t.number),\r\n  HRef: Option(t.string),\r\n});\r\ntype OptionalReference = t.TypeOf<typeof OptionalReference>;\r\nexport { OptionalReference };\r\n\r\nexport const LocalDateTimeFromString = new t.Type<Date, string, unknown>(\r\n  'LocalDateTimeFromString',\r\n  (u): u is Date => u instanceof Date,\r\n  (u, c) =>\r\n    either.chain(t.string.validate(u, c), (s) => {\r\n      const d = parseISOLocalDateTime(s);\r\n      return isNaN(d.getTime()) ? t.failure(u, c) : t.success(d);\r\n    }),\r\n  (a) => formatISOLocalDateTime(a)\r\n);\r\n\r\nexport const LocalDateFromString = new t.Type<Date, string, unknown>(\r\n  'LocalDateTimeFromString',\r\n  (u): u is Date => u instanceof Date,\r\n  (u, c) =>\r\n    either.chain(t.string.validate(u, c), (s) => {\r\n      const d = parseISOLocalDate(s);\r\n      return isNaN(d.getTime()) ? t.failure(u, c) : t.success(d);\r\n    }),\r\n  (a) => formatISOLocalDate(a)\r\n);\r\n","import * as t from 'io-ts';\r\nimport { Reference, Option, LocalDateFromString } from './common-types';\r\n\r\nconst TeacherResource = t.type({\r\n  Id: t.Int,\r\n  TeacherId: t.Int,\r\n  FullName: t.string,\r\n  Acronym: Option(t.string),\r\n  Status: t.string,\r\n  StatusId: t.Int,\r\n});\r\ntype TeacherResource = t.TypeOf<typeof TeacherResource>;\r\nexport { TeacherResource };\r\n","import * as t from 'io-ts';\r\nimport { DateFromISOString } from 'io-ts-types';\r\nimport { Reference, Option } from './common-types';\r\n\r\nconst TeacherSubstitution = t.type({\r\n  Id: t.Int,\r\n  HolderId: t.Int,\r\n  Holder: t.string,\r\n  SubstituteId: t.Int,\r\n  Substitute: t.string,\r\n  DateFrom: DateFromISOString,\r\n  DateTo: DateFromISOString,\r\n  Remarks: Option(t.string),\r\n});\r\ntype TeacherSubstitution = t.TypeOf<typeof TeacherSubstitution>;\r\nexport { TeacherSubstitution };\r\n\r\nexport interface TeacherSubstitutionFilter {\r\n  Holder: Option<string>;\r\n  Substitute: Option<string>;\r\n  DateFrom: Option<Date>;\r\n  DateTo: Option<Date>;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { I18nService } from '../services/i18n.service';\r\n\r\n@Pipe({\r\n  name: 'addSpace',\r\n})\r\nexport class AddSpacePipe implements PipeTransform {\r\n  constructor(protected i18n: I18nService) {}\r\n\r\n  transform(value: string, chars: string): string {\r\n    const lang = this.i18n.detectLanguage();\r\n\r\n    switch (lang) {\r\n      case 'fr-CH':\r\n        Array.from(chars).map((c) => (value = value.replace(c, ' '.concat(c))));\r\n        return value;\r\n\r\n      default:\r\n        return value;\r\n    }\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { differenceInCalendarDays } from 'date-fns';\r\n\r\n@Pipe({\r\n  name: 'erzDaysDifference',\r\n})\r\nexport class DaysDifferencePipe implements PipeTransform {\r\n  constructor(private translate: TranslateService) {}\r\n\r\n  transform(input: Maybe<Date>): string {\r\n    if (!input) {\r\n      return '';\r\n    }\r\n    const difference = differenceInCalendarDays(input, new Date());\r\n    return this.translate.instant(\r\n      `shared.daysDifference.${this.getKey(difference)}`,\r\n      {\r\n        count: Math.abs(difference),\r\n      }\r\n    );\r\n  }\r\n\r\n  private getKey(daysDifference: number): string {\r\n    if (daysDifference === 0) {\r\n      return 'today';\r\n    } else if (daysDifference === 1) {\r\n      return 'tomorrow';\r\n    } else if (daysDifference === -1) {\r\n      return 'yesterday';\r\n    } else if (daysDifference > 0) {\r\n      return 'in';\r\n    }\r\n    return 'ago';\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { Person } from '../../shared/models/person.model';\r\n\r\n@Pipe({\r\n  name: 'erzPersonEmail',\r\n})\r\nexport class PersonEmailPipe implements PipeTransform {\r\n  transform(input: Maybe<Person>): Option<string> {\r\n    return input?.DisplayEmail || input?.Email || input?.Email2 || null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport {\r\n  DomSanitizer,\r\n  SafeHtml,\r\n  SafeResourceUrl,\r\n  SafeScript,\r\n  SafeStyle,\r\n  SafeUrl,\r\n} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe',\r\n})\r\n/* based on https://medium.com/@swarnakishore/angular-safe-pipe-implementation-to-bypass-domsanitizer-stripping-out-content-c1bf0f1cc36b */\r\nexport class SafePipe implements PipeTransform {\r\n  constructor(protected sanitizer: DomSanitizer) {}\r\n\r\n  transform(\r\n    value: any,\r\n    type: string\r\n  ): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n      case 'html':\r\n        return this.sanitizer.bypassSecurityTrustHtml(value);\r\n      case 'style':\r\n        return this.sanitizer.bypassSecurityTrustStyle(value);\r\n      case 'script':\r\n        return this.sanitizer.bypassSecurityTrustScript(value);\r\n      case 'url':\r\n        return this.sanitizer.bypassSecurityTrustUrl(value);\r\n      case 'resourceUrl':\r\n        return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n      default:\r\n        throw new Error(`Invalid safe type specified: ${type}`);\r\n    }\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport xss, { IFilterXSSOptions } from 'xss';\r\n\r\n@Pipe({\r\n  name: 'xss',\r\n})\r\nexport class XssPipe implements PipeTransform {\r\n  transform(value: string, options?: IFilterXSSOptions): string {\r\n    return xss(value, options);\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { catchError, mapTo, share, take, tap } from 'rxjs/operators';\r\nimport { SETTINGS, Settings } from 'src/app/settings';\r\nimport { StorageService } from './storage.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport const SUBSTITUTE_ADMINISTRATOR_ROLE:string = 'SubstituteAdministratorRole';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n\r\n  personId$:BehaviorSubject<Option<number>> = new BehaviorSubject<Option<number>>(null);\r\n  holderId$:BehaviorSubject<Option<number>> = new BehaviorSubject<Option<number>>(null);\r\n  substitutionId$:BehaviorSubject<Option<number>> = new BehaviorSubject<Option<number>>(null);\r\n\r\n  constructor(\r\n    private storage: StorageService, \r\n    private route: ActivatedRoute, \r\n    private router: Router,\r\n    @Inject(SETTINGS) private settings: Settings,\r\n    //private location: Location,\r\n    private http: HttpClient\r\n  ) {\r\n    this.personId$.next(this.personId);\r\n    this.substitutionId$.next(this.substitutionId);\r\n    this.holderId$.next(this.holderId);\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    return Boolean(this.accessToken);\r\n  }\r\n\r\n  get accessToken(): Option<string> {\r\n    return this.storage.getAccessToken();\r\n  }\r\n\r\n  get personId(): Option<number> {\r\n    if (this.accessToken == null) return null;\r\n    let stringId = this.parseJwt(this.accessToken).id_person;\r\n    if (stringId == null) return null;\r\n    return parseInt(stringId);\r\n  }\r\n\r\n  get personName(): Option<string> {\r\n    if (this.accessToken == null) return null;\r\n    return this.parseJwt(this.accessToken).fullname;\r\n  }\r\n\r\n  get substitutionId(): Option<number> {\r\n    if (this.accessToken == null) return null;\r\n    let substitutionId:Option<string> = this.parseJwt(this.accessToken).substitution_id;\r\n    if (substitutionId == null) return substitutionId;\r\n    return parseInt(substitutionId);\r\n  }\r\n\r\n  get holderId(): Option<number> {\r\n    if (this.accessToken == null) return null;\r\n    let substitutionId:Option<string> = this.parseJwt(this.accessToken).holder_id;\r\n    if (substitutionId == null) return substitutionId;\r\n    return parseInt(substitutionId);\r\n  }\r\n\r\n  get oAuthUrl(): Option<string> {\r\n    if (this.accessToken == null) return null;\r\n    return this.parseJwt(this.accessToken).iss;\r\n  }\r\n\r\n  get roles(): string[] {\r\n    if (this.accessToken == null) return [];\r\n    let rolesString = this.parseJwt(this.accessToken).roles ?? \"\";\r\n    return rolesString.split(';');\r\n  }\r\n\r\n  public hasRole(role:string):boolean {\r\n    return this.roles.includes(role);\r\n  }\r\n\r\n  public setTokenResponse(tokenResponse:any): void {\r\n    this.storage.setToken(\r\n      tokenResponse[\"access_token\"], \r\n      tokenResponse[\"refresh_token\"]\r\n    );\r\n\r\n    this.personId$.next(this.personId);\r\n    this.substitutionId$.next(this.substitutionId);\r\n    this.holderId$.next(this.holderId);\r\n  }\r\n\r\n  public setToken(accessToken:string): void {\r\n    this.storage.setToken(\r\n      accessToken, \r\n      \"\"\r\n    );\r\n    this.personId$.next(this.personId);\r\n    this.substitutionId$.next(this.substitutionId);\r\n    this.holderId$.next(this.holderId);\r\n  }\r\n\r\n  private parseJwt(token:string) {\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n  };\r\n\r\n  public login():void {\r\n    let oAuthUrl = this.settings.oAuthUrl;\r\n    let instanceId = this.settings.instanceId;\r\n    let clientId = this.settings.clientId;\r\n    let redirectUrl = this.settings.oAuthRedirectUrl;\r\n    let appScope = this.settings.appScope;\r\n\r\n    let params = new URLSearchParams();\r\n    if (!clientId) {\r\n      console.error('clientId is not configured');\r\n      return;\r\n    }\r\n\r\n    params.append('clientId', clientId);\r\n    params.append('application_scope', appScope);\r\n    if (redirectUrl) {\r\n      params.append('redirectUrl', redirectUrl);\r\n    }\r\n\r\n    let loginUrl = `${oAuthUrl}/authorization/${instanceId}/login?${params.toString()}`;\r\n\r\n    window.location.href = loginUrl;\r\n  }\r\n\r\n  public logout():Observable<void> {\r\n    let oAuthUrl = this.settings.oAuthUrl;\r\n    let instanceId = this.settings.instanceId;\r\n    let body = `access_token=${encodeURIComponent(this.accessToken ?? \"\")}`;\r\n    let logoutUrl = `${oAuthUrl}/authorization/${instanceId}/logout`;\r\n\r\n    let result = this.http.post(logoutUrl, body, {responseType: 'text'}).pipe(\r\n      tap(v => {\r\n        console.log('response', v);\r\n        this.personId$.next(null);\r\n        this.holderId$.next(null);\r\n        this.substitutionId$.next(null);\r\n        this.storage.setToken(null, null);\r\n        this.router.navigate(['/']);\r\n      }),\r\n      mapTo(undefined),\r\n      share()\r\n    );\r\n\r\n    result.subscribe(v => console.log('success', v), v => console.log('errror', v));\r\n\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { format, parse } from 'date-fns';\r\nimport {\r\n  NgbDateParserFormatter,\r\n  NgbDateStruct,\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Injectable()\r\nexport class DateParserFormatter extends NgbDateParserFormatter {\r\n  /**\r\n   * The default implementation uses non-strict type checking and expects `null` to be returned if the value can't be parsed.\r\n   */\r\n  parse(value: string): NgbDateStruct {\r\n    const date = value ? parse(value, 'dd.MM.yyyy', new Date()) : null;\r\n    if (date) {\r\n      return {\r\n        year: date.getFullYear(),\r\n        month: date.getMonth() + 1,\r\n        day: date.getDate(),\r\n      };\r\n    }\r\n    return (null as unknown) as NgbDateStruct;\r\n  }\r\n  /**\r\n   * The default implementation uses non-strict type checking and expects an empty string to be returned if the given date is `null`.\r\n   */\r\n  format(date: NgbDateStruct): string {\r\n    return date\r\n      ? format(new Date(date.year, date.month - 1, date.day), 'dd.MM.yyyy')\r\n      : '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { StorageService } from './storage.service';\r\n\r\nconst LANGUAGES: ReadonlyArray<string> = ['de-CH', 'fr-CH'];\r\nconst FALLBACK_LANGUAGE = LANGUAGES[0];\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class I18nService {\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private storage: StorageService\r\n  ) {}\r\n\r\n  private detectedLanguage: Option<string>;\r\n\r\n  initialize(): void {\r\n    this.translate.setDefaultLang(FALLBACK_LANGUAGE);\r\n    this.translate.use(this.detectLanguage());\r\n  }\r\n\r\n  /**\r\n   * Detect the user's language using the following priorities:\r\n   *   1. Document's HTML lang attribute\r\n   *   2. Language provided in localStorage\r\n   *   3. Browser's language\r\n   *   4. Fallback language\r\n   */\r\n  detectLanguage(): string {\r\n    if (!this.detectedLanguage) {\r\n      this.detectedLanguage =\r\n        this.getDocumentLanguage() ||\r\n        this.getStoredLanguage() ||\r\n        this.getBrowserLanguage() ||\r\n        FALLBACK_LANGUAGE;\r\n    }\r\n\r\n    return this.detectedLanguage;\r\n  }\r\n\r\n  getLocalizedLanguage(language: Maybe<string>): string {\r\n    language = LANGUAGES.find(\r\n      (l) => l === `${(language || '').toLowerCase()}-CH`\r\n    );\r\n    return language ? language : FALLBACK_LANGUAGE;\r\n  }\r\n\r\n  private getDocumentLanguage(): Option<string> {\r\n    const langElement = document.querySelector('[lang]') as HTMLElement | null;\r\n    return this.normalizeLanguage(langElement && langElement.lang);\r\n  }\r\n\r\n  private getStoredLanguage(): Option<string> {\r\n    return this.normalizeLanguage(this.storage.getLanguage());\r\n  }\r\n\r\n  private getBrowserLanguage(): Option<string> {\r\n    return this.normalizeLanguage(this.translate.getBrowserLang());\r\n  }\r\n\r\n  private normalizeLanguage(lang: Maybe<string>): Option<string> {\r\n    lang = (lang || '').split('-')[0];\r\n    return (lang && LANGUAGES.find((l) => lang === l.split('-')[0])) || null;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport {\r\n  Observable,\r\n  Subject,\r\n  ReplaySubject,\r\n  ConnectableObservable,\r\n  Subscription,\r\n} from 'rxjs';\r\nimport {\r\n  map,\r\n  finalize,\r\n  scan,\r\n  pluck,\r\n  startWith,\r\n  distinctUntilChanged,\r\n  multicast,\r\n} from 'rxjs/operators';\r\nimport { prepare } from '../utils/observable';\r\n\r\ninterface LoadingAction {\r\n  action: 'increment' | 'decrement';\r\n  context: string;\r\n}\r\n\r\ninterface LoadingCounts {\r\n  [context: string]: number;\r\n}\r\n\r\nconst DEFAULT_CONTEXT = 'default';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoadingService implements OnDestroy {\r\n  private action$ = new Subject<LoadingAction>();\r\n  private loadingCountsSub: Subscription;\r\n\r\n  loadingCounts$ = this.action$.pipe(\r\n    scan((counts, { action, context }) => {\r\n      switch (action) {\r\n        case 'increment':\r\n          counts[context] = (counts[context] || 0) + 1;\r\n          return counts;\r\n        case 'decrement':\r\n          counts[context] = Math.max(0, (counts[context] || 0) - 1);\r\n          return counts;\r\n        default:\r\n          return counts;\r\n      }\r\n    }, {} as LoadingCounts),\r\n    startWith({} as LoadingCounts),\r\n    multicast(() => new ReplaySubject<LoadingCounts>(1)) // Make it hot\r\n  );\r\n\r\n  loading$ = this.loading();\r\n\r\n  constructor() {\r\n    this.loadingCountsSub = (this\r\n      .loadingCounts$ as ConnectableObservable<LoadingCounts>).connect();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loadingCountsSub.unsubscribe();\r\n  }\r\n\r\n  loading(context = DEFAULT_CONTEXT): Observable<boolean> {\r\n    return this.loadingCounts$.pipe(\r\n      pluck(context),\r\n      map(nonZero),\r\n      distinctUntilChanged()\r\n    );\r\n  }\r\n\r\n  load<T>(source$: Observable<T>, context = DEFAULT_CONTEXT): Observable<T> {\r\n    return source$.pipe(\r\n      prepare(this.incrementLoadingCount(context)),\r\n      finalize(this.decrementLoadingCount(context))\r\n    );\r\n  }\r\n\r\n  private incrementLoadingCount(context: string): () => void {\r\n    return () => this.action$.next({ action: 'increment', context });\r\n  }\r\n\r\n  private decrementLoadingCount(context: string): () => void {\r\n    return () => this.action$.next({ action: 'decrement', context });\r\n  }\r\n}\r\n\r\nfunction nonZero(value?: number): boolean {\r\n  return (value || 0) !== 0;\r\n}\r\n","import { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport * as t from 'io-ts/lib/index';\r\n\r\nimport { Settings } from '../../settings';\r\nimport { decode, decodeArray } from '../utils/decode';\r\n\r\nexport const enum HTTP_STATUS {\r\n  UNKNOWN = 0,\r\n  UNAUTHORIZED = 401,\r\n  FORBIDDEN = 403,\r\n  NOT_FOUND = 404,\r\n  CONFLICT = 409,\r\n  UNPROCESSABLE_ENTITY = 422,\r\n  SERVICE_UNAVAILABLE = 503,\r\n  GATEWAY_TIMEOUT = 504,\r\n}\r\n\r\nexport abstract class RestService<T extends t.InterfaceType<any>> {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected settings: Settings,\r\n    protected codec: T,\r\n    protected resourcePath: string\r\n  ) {}\r\n\r\n  get(\r\n    id: number,\r\n    options?: {\r\n      headers?: HttpHeaders | Dict<string>;\r\n      params?: HttpParams | Dict<string>;\r\n    }\r\n  ): Observable<t.TypeOf<T>> {\r\n    return this.http\r\n      .get<unknown>(`${this.baseUrl}/${id}`, options)\r\n      .pipe(switchMap(decode(this.codec)));\r\n  }\r\n\r\n  getList(options?: {\r\n    headers?: HttpHeaders | Dict<string>;\r\n    params?: HttpParams | Dict<string>;\r\n  }): Observable<ReadonlyArray<t.TypeOf<T>>> {\r\n    return this.http\r\n      .get<unknown>(`${this.baseUrl}/`, options)\r\n      .pipe(switchMap(decodeArray(this.codec)));\r\n  }\r\n\r\n  protected get baseUrl(): string {\r\n    return `${this.settings.apiUrl}/${this.resourcePath}`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenPayload } from 'src/app/shared/models/token-payload.model';\r\n\r\nconst LANGUAGE_KEY = 'uiCulture';\r\nconst ACCESS_TOKEN_KEY = 'CLX.LoginToken';\r\nconst REFRESH_TOKEN_KEY = 'CLX.RefreshToken';\r\nconst TOKEN_EXPIRE_KEY = 'CLX.TokenExpire';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StorageService {\r\n  getLanguage(): Option<string> {\r\n    return this.getValue(LANGUAGE_KEY);\r\n  }\r\n\r\n  getAccessToken(): Option<string> {\r\n    const token = this.getValue(ACCESS_TOKEN_KEY);\r\n    return token ? token.replace(/^\\\"+|\\\"+$/g, '') : null;\r\n  }\r\n\r\n  getRefreshToken(): Option<string> {\r\n    return this.getValue(REFRESH_TOKEN_KEY);\r\n  }\r\n\r\n  setToken(accessToken:Option<string>, refreshToken:Option<string>): void {\r\n    this.setValue(ACCESS_TOKEN_KEY, accessToken);\r\n    this.setValue(REFRESH_TOKEN_KEY, refreshToken);\r\n  }\r\n\r\n  getTokenExpire(): Option<string> {\r\n    return this.getValue(TOKEN_EXPIRE_KEY);\r\n  }\r\n\r\n  getPayload(): Option<TokenPayload> {\r\n    const token = this.getAccessToken();\r\n    const base64Url = token ? token.split('.')[1] : null;\r\n    const base64 = base64Url\r\n      ? base64Url.replace('-', '+').replace('_', '/')\r\n      : null;\r\n    return JSON.parse(window.atob(base64 ? base64 : ''));\r\n  }\r\n\r\n  private getValue(key: string): Option<string> {\r\n    return sessionStorage.getItem(key) || localStorage.getItem(key);\r\n  }\r\n\r\n  private setValue(key: string, value:Option<string>): void {\r\n    if (value == null) {\r\n      sessionStorage.removeItem(key);\r\n    } else {\r\n      sessionStorage.setItem(key, value);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport * as t from 'io-ts/lib/index';\r\nimport { switchMap, mapTo, map, share, catchError, tap, first, onErrorResumeNext } from 'rxjs/operators';\r\nimport { decode, decodeArray } from '../utils/decode';\r\n\r\nimport { RestService } from './rest.service';\r\nimport { TypeaheadRestService } from './typeahead-rest.service';\r\nimport { SETTINGS, Settings } from '../../settings';\r\nimport { TeacherSubstitution } from '../models/teacher-substitution.model';\r\nimport { number } from 'fp-ts';\r\nimport { TeacherResource } from '../models/teacher-resource.model';\r\nimport { AuthService } from './auth.service';\r\n\r\n/**\r\n * Don't use this service to load presence types in\r\n * components/services, use the `PresenceTypesService` instead, that\r\n * caches these entries and loads them only once throughout the\r\n * application.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TeacherResourceService extends RestService<typeof TeacherResource> {\r\n  constructor(\r\n      http: HttpClient, \r\n      @Inject(SETTINGS) settings: Settings,\r\n      public authService: AuthService\r\n  ) {\r\n    super(http, settings, TeacherResource, 'TeacherResources');\r\n  }\r\n\r\n  getTeacherName(id:Option<number>):Observable<Option<string>> {\r\n    if (id == null) return new BehaviorSubject<Option<string>>(null);\r\n\r\n    let params = {\r\n      //'fields': [\"Id\", \"FullName\"].join(','),\r\n      'filter.TeacherId': `=${id}`,\r\n    }\r\n    return this.http.get<unknown>(`${this.baseUrl}/`, {params: params}).pipe(\r\n        tap(v => console.log('get  name', v), e => console.log('error1', e)),\r\n        switchMap(v => {\r\n          return decodeArray(this.codec)(v);\r\n        }),\r\n        tap(v => console.log('name received'), e => console.log('error2', e)),\r\n        map(v => v[0].FullName),\r\n    );\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport * as t from 'io-ts/lib/index';\r\nimport { switchMap, mapTo, map, share, catchError, tap } from 'rxjs/operators';\r\nimport { decode, decodeArray } from '../utils/decode';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { RestService } from './rest.service';\r\nimport { TypeaheadRestService } from './typeahead-rest.service';\r\nimport { SETTINGS, Settings } from '../../settings';\r\nimport { TeacherSubstitution, TeacherSubstitutionFilter } from '../models/teacher-substitution.model';\r\nimport { number } from 'fp-ts';\r\nimport { TeacherResource } from '../models/teacher-resource.model';\r\nimport { AuthService } from './auth.service';\r\nimport { PaginatedEntriesService } from './paginated-entries.service';\r\nimport { LoadingService } from './loading-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { formatISOLocalDate, formatISOUTC } from '../utils/date';\r\n\r\n/**\r\n * Don't use this service to load presence types in\r\n * components/services, use the `PresenceTypesService` instead, that\r\n * caches these entries and loads them only once throughout the\r\n * application.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TeacherSubstitutionService extends RestService<typeof TeacherSubstitution> {\r\n  constructor(\r\n      private loadingService: LoadingService,\r\n      //private location: Location,\r\n      private route: ActivatedRoute,\r\n      http: HttpClient, \r\n      @Inject(SETTINGS) settings: Settings,\r\n      public authService: AuthService\r\n  ) {\r\n    super(http, settings, TeacherSubstitution, 'TeacherSubstitutions');\r\n    this.typeaheadService = new TypeaheadRestService(http, settings, TeacherResource, 'TeacherResources', 'FullName', 'TeacherId');\r\n  }\r\n\r\n  typeaheadService:TypeaheadRestService<typeof TeacherResource>;\r\n  substitutions$ = this.getList();\r\n  mySubstitutions$:Observable<ReadonlyArray<t.TypeOf<typeof TeacherSubstitution>>> = \r\n    this.http.get<unknown>(`${this.baseUrl}/my`, {params: {'sort': 'DateFrom.asc'}}).pipe(\r\n        switchMap(decodeArray(this.codec))\r\n    );\r\n\r\n  //getPaginatedList():PaginatedEntriesService<TeacherSubstitution, TeacherSubstitutionFilter> {\r\n  //  return new PaginatedEntriesService<TeacherSubstitution, TeacherSubstitutionFilter>(this.location, this.loadingService, this.settings, '/teachersubstitutions')\r\n  //}\r\n\r\n  getMyList():Observable<ReadonlyArray<t.TypeOf<typeof TeacherSubstitution>>> {\r\n    return this.http.get<unknown>(`${this.baseUrl}/my`, {params: {'sort': 'DateFrom.asc'}}).pipe(\r\n        switchMap(decodeArray(this.codec))\r\n    );\r\n  }\r\n\r\n  getCurrentList():Observable<ReadonlyArray<t.TypeOf<typeof TeacherSubstitution>>> {\r\n    return this.http.get<unknown>(`${this.baseUrl}/current`).pipe(\r\n        switchMap(decodeArray(this.codec))\r\n    );\r\n  }\r\n\r\n  getAdminList():Observable<ReadonlyArray<t.TypeOf<typeof TeacherSubstitution>>> {\r\n    let date = new Date();\r\n    let date2 = new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));\r\n    let dateFromISO = new Date(date2.setUTCDate(date2.getUTCDate())).toISOString().split('.')[0];\r\n\r\n    return this.http.get<unknown>(`${this.baseUrl}/`, {params: {limit: 9999, 'filter.DateTo': `!<${dateFromISO}`}}).pipe(\r\n        switchMap(decodeArray(this.codec))\r\n    );\r\n  }\r\n\r\n  edit(substitutionId:Number, dateFrom:Date, dateTo:Date, remarks:string):Observable<void> {\r\n    let body = {\r\n      'SubstitutionIds': substitutionId ? [substitutionId] : null,\r\n      'DateFrom': formatISOLocalDate(dateFrom),\r\n      'DateTo': formatISOLocalDate(dateTo),\r\n      'Remarks': remarks\r\n    };\r\n\r\n    return this.http.put(`${this.baseUrl}/set`, body, {responseType:\"json\"}).pipe(\r\n        mapTo(undefined), \r\n        share()\r\n    );\r\n  }\r\n  create(holderId:number, substituteId:number, from:Date, to:Date, remarks:string):Observable<void> {\r\n    let body = {\r\n      'HolderId': holderId,\r\n      'SubstituteIds': substituteId ? [substituteId] : null,\r\n      'DateFrom': formatISOLocalDate(from),\r\n      'DateTo': formatISOLocalDate(to),\r\n      'Remarks': remarks\r\n    }\r\n    return this.http.put(`${this.baseUrl}/new`, body).pipe(mapTo(undefined), share());\r\n  }\r\n  delete(substitutionId:number):Observable<void> {\r\n    let body = {\r\n        'SubsititutionIds': substitutionId ? [substitutionId] : null\r\n    };\r\n    return this.http.put(`${this.baseUrl}/revoke`, body).pipe(mapTo(undefined), share());\r\n  }\r\n\r\n  start(substitutionId:number):Observable<void> {\r\n    let oAuthUrl = this.authService.oAuthUrl;\r\n    let webmoduleRedirectUrl = window.location.pathname + window.location.hash;\r\n\r\n    let body:any = {\r\n      'access_token': this.authService.accessToken ?? \"\",\r\n    };\r\n    if (this.settings.oAuthRedirectUrl) {\r\n      body['redirect_uri'] = this.settings.oAuthRedirectUrl;\r\n    }\r\n    let params = new URLSearchParams({\r\n      'webModuleRedirectUri': webmoduleRedirectUrl,\r\n    });\r\n    let url = `${oAuthUrl}/Authorization/Substitutions/${substitutionId}/start?${params.toString()}`;\r\n    \r\n    this.postFormData(url, body);\r\n\r\n    return new Observable<void>();\r\n  }\r\n\r\n  stop(substitutionId:number):Observable<void> {\r\n    let oAuthUrl = this.authService.oAuthUrl;\r\n    let webmoduleRedirectUrl = window.location.pathname + window.location.hash;\r\n    let body:any = {\r\n      'access_token': this.authService.accessToken ?? \"\",\r\n    };\r\n    if (this.settings.oAuthRedirectUrl) {\r\n      body['redirect_uri'] = this.settings.oAuthRedirectUrl;\r\n    }\r\n\r\n    let params = new URLSearchParams({\r\n      'moduleRedirectUrl': window.location.hash.substring(1),\r\n      'webModuleRedirectUri': webmoduleRedirectUrl,\r\n    });\r\n    let url = `${oAuthUrl}/Authorization/Substitutions/${substitutionId}/stop?${params.toString()}`;\r\n\r\n    this.postFormData(url, body);\r\n\r\n    return new Observable<void>();\r\n  }\r\n\r\n  start2(substitutionId:number):Observable<void> {\r\n    let oAuthUrl = this.authService.oAuthUrl;\r\n    let body = {\r\n        \"access_token\": this.authService.accessToken\r\n    }\r\n    return this.http.put(`${oAuthUrl}/Authorization/Substitutions/${substitutionId}/start`, body, {observe: \"response\", responseType: \"json\"}).pipe(\r\n        tap(v => {\r\n            if (v.ok) {\r\n                this.authService.setTokenResponse(v.body);\r\n                console.log(\"Substitution Started\", v.body);\r\n            }\r\n        }), \r\n        mapTo(undefined),\r\n        share()\r\n    );\r\n  }\r\n\r\n  stop2(substitutionId:number):Observable<void> {\r\n    let oAuthUrl = this.authService.oAuthUrl;\r\n    let body = {\r\n        \"access_token\": this.authService.accessToken\r\n    }\r\n    return this.http.put(`${oAuthUrl}/Authorization/Substitutions/${substitutionId}/stop`, body, {observe: \"response\", responseType: \"json\"}).pipe(\r\n        tap(v => {\r\n            if (v.ok) {\r\n                this.authService.setTokenResponse(v.body);\r\n                console.log(\"Substitution Stopped\");\r\n            }\r\n        }),\r\n        mapTo(undefined), \r\n        share()\r\n    );\r\n  }\r\n\r\n  private postFormData(url:string, data:any) {\r\n    let formElement = document.createElement('form');\r\n    formElement.setAttribute('target', '_self');\r\n    formElement.setAttribute('action', url);\r\n    formElement.setAttribute('method', 'POST');\r\n    formElement.style.visibility = 'hidden';\r\n\r\n    for (let [key, value] of Object.entries(data)) {\r\n      let inputElement = document.createElement('input');\r\n      inputElement.setAttribute('type', 'text');\r\n      inputElement.setAttribute('name', key as string);\r\n      inputElement.setAttribute('value', value as string);\r\n      formElement.appendChild(inputElement);\r\n    }\r\n\r\n    document.body.appendChild(formElement);\r\n    formElement.submit();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport * as t from 'io-ts';\r\n\r\nimport { Settings } from 'src/app/settings';\r\nimport { pick } from '../utils/types';\r\nimport { decodeArray, decode } from '../utils/decode';\r\nimport { RestService } from '../services/rest.service';\r\nimport { DropDownItem } from '../models/drop-down-item.model';\r\n\r\nexport class HttpParams {\r\n  params: { [param: string]: string };\r\n}\r\n\r\nexport interface TypeaheadService {\r\n  getTypeaheadItems(\r\n    term: string,\r\n    additionalParams?: HttpParams\r\n  ): Observable<ReadonlyArray<DropDownItem>>;\r\n  getTypeaheadItemById(id: number): Observable<DropDownItem>;\r\n}\r\n\r\nexport class TypeaheadRestService<T extends t.InterfaceType<any>>\r\n  extends RestService<T>\r\n  implements TypeaheadService {\r\n  protected typeaheadCodec = t.type(\r\n    pick(this.codec.props, [this.idAttr, this.labelAttr])\r\n  );\r\n\r\n  constructor(\r\n    http: HttpClient,\r\n    settings: Settings,\r\n    codec: T,\r\n    resourcePath: string,\r\n    protected labelAttr: string,\r\n    protected idAttr = 'Id'\r\n  ) {\r\n    super(http, settings, codec, resourcePath);\r\n  }\r\n\r\n  getTypeaheadItems(\r\n    term: string,\r\n    additionalParams?: HttpParams\r\n  ): Observable<ReadonlyArray<DropDownItem>> {\r\n    const params = {\r\n      params: {\r\n        fields: [this.idAttr, this.labelAttr].join(','),\r\n        [`filter.${this.labelAttr}`]: `~*${term}*`,\r\n      },\r\n    };\r\n\r\n    return this.http\r\n      .get<unknown>(\r\n        `${this.baseUrl}/`,\r\n        additionalParams\r\n          ? this.mergeHttpParams(params, additionalParams)\r\n          : params\r\n      )\r\n      .pipe(\r\n        switchMap(decodeArray(this.typeaheadCodec)),\r\n        map((items) =>\r\n          items.map((i) => ({ Key: i[this.idAttr], Value: i[this.labelAttr] }))\r\n        )\r\n      );\r\n  }\r\n\r\n  getTypeaheadItemById(id: number): Observable<DropDownItem> {\r\n    return this.http\r\n      .get<unknown>(`${this.baseUrl}/${id}`, {\r\n        params: {\r\n          fields: [this.idAttr, this.labelAttr].join(','),\r\n        },\r\n      })\r\n      .pipe(\r\n        switchMap(decode(this.typeaheadCodec)),\r\n        map((item) => ({ Key: item[this.idAttr], Value: item[this.labelAttr] }))\r\n      );\r\n  }\r\n\r\n  private mergeHttpParams(\r\n    typeaheadParams: HttpParams,\r\n    additionalParams: HttpParams\r\n  ): HttpParams {\r\n    const merged = {\r\n      params: { ...typeaheadParams.params, ...additionalParams.params },\r\n    };\r\n    if (additionalParams.params.fields) {\r\n      merged.params.fields = typeaheadParams.params.fields.concat(\r\n        ',',\r\n        additionalParams.params.fields\r\n      );\r\n    }\r\n    return merged;\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AvatarComponent } from './components/avatar/avatar.component';\r\nimport { SpinnerComponent } from './components/spinner/spinner.component';\r\nimport { LetDirective } from './directives/let.directive';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { RestAuthInterceptor } from '../rest-auth-interceptor';\r\nimport { RestErrorInterceptor } from '../rest-error-interceptor';\r\nimport { TypeaheadComponent } from './components/typeahead/typeahead.component';\r\nimport { DateSelectComponent } from './components/date-select/date-select.component';\r\nimport { SelectComponent } from './components/select/select.component';\r\nimport { PersonEmailPipe } from './pipes/person-email.pipe';\r\nimport { DaysDifferencePipe } from './pipes/days-difference.pipe';\r\nimport { ResettableInputComponent } from './components/resettable-input/resettable-input.component';\r\nimport { SafePipe } from './pipes/safe.pipe';\r\nimport { XssPipe } from './pipes/xss.pipe';\r\nimport { AddSpacePipe } from './pipes/add-space.pipe';\r\nimport { MultiselectComponent } from './components/multiselect/multiselect.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\n// Components that will be exported\r\nconst components = [\r\n  LetDirective,\r\n  SpinnerComponent,\r\n  AvatarComponent,\r\n  TypeaheadComponent,\r\n  DateSelectComponent,\r\n  SelectComponent,\r\n  MultiselectComponent, \r\n  PersonEmailPipe,\r\n  DaysDifferencePipe,\r\n  SafePipe,\r\n  XssPipe,\r\n  AddSpacePipe,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ...components,\r\n    ResettableInputComponent,\r\n    SafePipe,\r\n    XssPipe,\r\n    AddSpacePipe,\r\n    MultiselectComponent,\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: RestErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: RestAuthInterceptor, multi: true },\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    TranslateModule.forChild(),\r\n    NgbModule,\r\n    InfiniteScrollModule,\r\n    NgSelectModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n    TranslateModule,\r\n    NgbModule,\r\n    InfiniteScrollModule,\r\n    ...components,\r\n    ResettableInputComponent,\r\n    NgSelectModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const NAVIGATOR: InjectionToken<Navigator> = new InjectionToken(\r\n  'Navigator API',\r\n  {\r\n    providedIn: 'root',\r\n    factory: (): Navigator => navigator,\r\n  }\r\n);\r\n","/**\r\n * The api provides dates without timezone;\r\n * to prevent problems, the date string is parsed manually.\r\n * See https://stackoverflow.com/questions/33908299/javascript-parse-a-string-to-date-as-local-time-zone/33909265#33909265\r\n */\r\nexport function parseISOLocalDateTime(dateString: string): Date {\r\n  const dateArray = dateString.split(/\\D/).map((d) => Number(d));\r\n  return new Date(\r\n    dateArray[0],\r\n    dateArray[1] - 1,\r\n    dateArray[2],\r\n    dateArray[3],\r\n    dateArray[4],\r\n    dateArray[5]\r\n  );\r\n}\r\n\r\n/**\r\n * The api provides dates without time;\r\n * to prevent problems, the date string is parsed manually.\r\n * See https://stackoverflow.com/questions/33908299/javascript-parse-a-string-to-date-as-local-time-zone/33909265#33909265\r\n */\r\nexport function parseISOLocalDate(dateString: string): Date {\r\n  const dateArray = dateString.split(/\\D/).map((d) => Number(d));\r\n  return new Date(dateArray[0], dateArray[1] - 1, dateArray[2]);\r\n}\r\n\r\n/**\r\n * The api provides dates without timezone;\r\n * to prevent problems, the date string is formatted manually.\r\n * See https://stackoverflow.com/questions/33908299/javascript-parse-a-string-to-date-as-local-time-zone/33909265#33909265\r\n */\r\nexport function formatISOLocalDateTime(date: Date): string {\r\n  return (\r\n    formatISOLocalDate(date) +\r\n    `T${zeroPadding(date.getHours())}:${zeroPadding(\r\n      date.getMinutes()\r\n    )}:${zeroPadding(date.getSeconds())}`\r\n  );\r\n}\r\n\r\n/**\r\n * The api provides dates without time;\r\n * to prevent problems, the date string is formatted manually.\r\n * See https://stackoverflow.com/questions/33908299/javascript-parse-a-string-to-date-as-local-time-zone/33909265#33909265\r\n */\r\nexport function formatISOLocalDate(date: Date): string {\r\n  return `${date.getFullYear()}-${zeroPadding(\r\n    date.getMonth() + 1\r\n  )}-${zeroPadding(date.getDate())}`;\r\n}\r\n\r\nexport function formatISOUTC(date: Date): string {\r\n  return `${date.getUTCFullYear()}-${zeroPadding(\r\n    date.getUTCMonth() + 1\r\n  )}-${zeroPadding(date.getUTCDate())}`;\r\n}\r\n\r\nfunction zeroPadding(value: number): string {\r\n  return ('0' + value).slice(-2);\r\n}\r\n","import * as t from 'io-ts';\r\nimport { pipe } from 'fp-ts/es6/pipeable';\r\nimport { fold, left } from 'fp-ts/es6/Either';\r\nimport { PathReporter } from 'io-ts/es6/PathReporter';\r\nimport { Observable, throwError, of } from 'rxjs';\r\n\r\nexport class DecodeError extends Error {\r\n  name = 'DecodeError';\r\n}\r\n\r\n/**\r\n * Decode JSON data using the given io-st type (i.e. codec), throws a\r\n * `DecodeError` if the data is not valid.\r\n *\r\n * Usage:\r\n *   const Foo = t.type({\r\n *     foo: t.string\r\n *   });\r\n *   decode(Foo)({ foo: 'bar' }).subscribe(result => ...)\r\n *\r\n * Example using HttpClient:\r\n *   this.http.get(...).pipe(switchMap(decode(Foo))).subscribe(...)\r\n */\r\nexport function decode<C extends t.Mixed>(\r\n  codec: C\r\n): (json: unknown) => Observable<t.TypeOf<C>> {\r\n  return (json) => {\r\n    return pipe(\r\n      codec.decode(json),\r\n      fold(\r\n        (error) =>\r\n          throwError(\r\n            new DecodeError(PathReporter.report(left(error)).join('\\n'))\r\n          ),\r\n        (data) => of(data)\r\n      )\r\n    );\r\n  };\r\n}\r\n\r\n/**\r\n * Convenience function, equivalent to calling `decode(t.array(X))`,\r\n * but without having to import io-ts: `decodeArray(X)`.\r\n */\r\nexport function decodeArray<C extends t.Mixed>(\r\n  codec: C\r\n): (json: unknown) => Observable<ReadonlyArray<t.TypeOf<C>>> {\r\n  return decode(t.array(codec));\r\n}\r\n","export function nonZero(value: number): boolean {\r\n  return value !== 0;\r\n}\r\n\r\nexport function notNull<T>(arg: T | null): arg is T {\r\n  return arg !== null;\r\n}\r\n\r\nexport function not<A>(fn: (arg: A) => boolean): (arg: A) => boolean {\r\n  return (arg) => !fn(arg);\r\n}\r\n\r\nexport function longerOrEqual<T extends { length: number }>(\r\n  length: number\r\n): (value: T) => boolean {\r\n  return (value) => value.length >= length;\r\n}\r\n\r\ntype Falsy = null | undefined | '' | false | 0 | void | never;\r\n\r\nexport function isTruthy<T>(value: T): value is Exclude<T, Falsy> {\r\n  return Boolean(value);\r\n}\r\n\r\nexport function isInstanceOf<T>(\r\n  type: Constructor<T>\r\n): (value: any) => value is T {\r\n  // tslint:disable-next-line\r\n  return function (value: any): value is T {\r\n    return value instanceof type;\r\n  };\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport {\r\n  ObservableInput,\r\n  ObservedValueOf,\r\n  of,\r\n  OperatorFunction,\r\n  throwError,\r\n  MonoTypeOperatorFunction,\r\n  Observable,\r\n  defer,\r\n} from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nexport function catch404<T, O extends ObservableInput<any>>(\r\n  returnValue?: any\r\n): OperatorFunction<T, Option<T | ObservedValueOf<O>>> {\r\n  return catchError((error) => {\r\n    if (error instanceof HttpErrorResponse && error.status === 404) {\r\n      return of(returnValue || null);\r\n    } else {\r\n      return throwError(error);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * For debugging purposes, logs message an value for each value in the\r\n * stream, e.g.:\r\n *   foo$.pipe(log('foo$')).subscribe()\r\n */\r\nexport function log<T>(\r\n  message: Option<string> = null\r\n): MonoTypeOperatorFunction<T> {\r\n  return (input$) =>\r\n    input$.pipe(\r\n      tap((x: T) => (message ? console.log(message, x) : console.log(x)))\r\n    );\r\n}\r\n\r\n/**\r\n * Calls a callback when an observable gets subscribed, e.g.:\r\n *   foo$.pipe(prepare(() => console.log('subscribed')))\r\n */\r\nexport function prepare<T>(\r\n  callback: () => void\r\n): (source: Observable<T>) => Observable<T> {\r\n  return (source: Observable<T>): Observable<T> =>\r\n    defer(() => {\r\n      callback();\r\n      return source;\r\n    });\r\n}\r\n","/**\r\n * Equivalent to TypeScript's Pick<T, K>, to be used with io-ts types\r\n * like this:\r\n *\r\n * const Student = t.type({\r\n *   Id: t.number,\r\n *   FullName: t.string,\r\n *   Email: t.string\r\n * })\r\n * const PartialStudent = t.type(pick(Student.props, ['Id', 'FullName']))\r\n *\r\n * Important note: this solution does not fail for unexisting\r\n * properties at compile-time, see:\r\n * https://github.com/gcanti/io-ts/issues/300\r\n */\r\nexport function pick<O, K extends keyof O>(o: O, keys: Array<K>): Pick<O, K> {\r\n  return keys.reduce((acc, k) => ({ ...acc, [k]: o[k] }), {} as Pick<O, K>);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'erz-unauthenticated',\r\n  template: `\r\n    <div class=\"erz-container\">\r\n      <div class=\"alert alert-danger my-3\">\r\n        {{ 'unauthenticated.message' | translate }}\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nexport class UnauthenticatedComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\n__webpack_public_path__ =\r\n  window.stellvertretung.settings.scriptsAndAssetsPath + '/';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}